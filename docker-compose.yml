version: '3.3'

services:
  django_backend_r2d:  # Django service
    build:
      context: ./django_backend_r2d
    command: python manage.py runserver 0.0.0.0:8000
    ports:
      - "8000:8000"
    depends_on:
      - postgres_r2d_db
    environment:
      - POSTGRES_DB=${POSTGRES_DB}
      - POSTGRES_USER=${POSTGRES_USER}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
      - DJANGO_SECRET_KEY=${DJANGO_SECRET_KEY}
    entrypoint: /app/entrypoint.sh  # bash script will create the database if it doesnt exists
    container_name: django_backend_r2d

  react_frontend_r2d: # React service
    build: 
      context: ./react_frontend_r2d
    command: npm start
    volumes:
      - ./react_frontend_r2d:/app  # Bind mount the frontend code
      - node_modules:/app/node_modules # This is to cache node_modules
    ports:
      - "3000:3000"
    working_dir: /app
    environment:
      - CHOKIDAR_USEPOLLING=true  # This helps with hot-reloading issues sometimes faced in Docker containers
      - CHOKIDAR_INTERVAL=200 # To fix hot-reload, poll every 200ms
      - WDS_SOCKET_PORT=0
    container_name: react_frontend_r2d
    
  postgres_r2d_db:
    image: postgres:latest
    volumes:
      - postgres_r2d_db_data:/var/lib/postgresql/data
    environment:
      - POSTGRES_DB=${POSTGRES_DB}
      - POSTGRES_USER=${POSTGRES_USER}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
    container_name: postgres_r2d_db_data

volumes:
  postgres_r2d_db_data:
  node_modules: