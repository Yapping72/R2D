name: R2D Django-React CI

on:
  push:
    branches:
      - main

jobs:
  build-and-test:
    runs-on: ubuntu-latest
     # Set the environment variables using GitHub Secrets
    env:
      POSTGRES_DB: ${{ secrets.POSTGRES_DB}}
      POSTGRES_USER: ${{ secrets.POSTGRES_USER }}
      POSTGRES_PASSWORD: ${{ secrets.POSTGRES_PASSWORD }}
      DJANGO_SECRET_KEY: ${{ secrets.DJANGO_SECRET_KEY }}
      POSTGRES_DB_PORT: ${{ secrets.POSTGRES_DB_PORT }}
      POSTGRES_R2D_HOST: ${{ secrets.POSTGRES_R2D_HOST }}
      CELERY_BROKER_URL: ${{ secrets.CELERY_BROKER_URL }}
      CELERY_RESULT_BACKEND: ${{ secrets.CELERY_RESULT_BACKEND }}
      R2D_OPENAI_API_TOKEN: ${{ secrets.R2D_OPENAI_API_TOKEN }}
      AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
      AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
      AWS_DEFAULT_REGION: ${{ secrets.AWS_DEFAULT_REGION }}
      LOG_LEVEL: ${{ secrets.LOG_LEVEL }}
      APP_ENVIRONMENT: ${{ secrets.APP_ENVIRONMENT }}
      CLOUDWATCH_LOG_GROUP_NAME: ${{ secrets.CLOUDWATCH_LOG_GROUP_NAME }}
      CLOUDWATCH_LOG_STREAM_NAME: ${{ secrets.CLOUDWATCH_LOG_STREAM_NAME }}
      SENDGRID_API_KEY: ${{ secrets.SENDGRID_API_KEY }}
      
    steps:
    - name: Checkout repository
      uses: actions/checkout@v2

    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v1

    - name: Cache Docker layers
      uses: actions/cache@v4
      with:
        path: /tmp/.buildx-cache
        key: ${{ runner.os }}-buildx-${{ github.sha }}
        restore-keys: |
          ${{ runner.os }}-buildx-
            
    - name: Correct Line Endings and Permissions
      run: |
        sed -i 's/\r$//' django_backend_r2d/entrypoint.sh
        chmod +x django_backend_r2d/entrypoint.sh
        ls -la django_backend_r2d
        
    - name: Build Docker Image
      run: |
           docker compose build
    
    - name: Start Docker Containers
      run: |
          docker compose up -d
          sleep 30
          docker compose ps

    - name: Run Framework Test
      run: |
          docker compose exec -T django_backend_r2d bash -c "python manage.py test framework" 

    - name: Run Accounts Test
      run: |
          docker compose exec -T django_backend_r2d bash -c "python manage.py test accounts" 

    - name: Run Authentication Test
      run: |
          docker compose exec -T django_backend_r2d bash -c "python manage.py test authentication" 

    - name: Run Jobs Test
      run: |
          docker compose exec -T django_backend_r2d bash -c "python manage.py test jobs" 
      
    - name: Run Diagrams Test
      run: |
          docker compose exec -T django_backend_r2d bash -c "python manage.py test diagrams" 
          
