pipeline {
    agent any
    options {
        timeout(time:30, unit: 'MINUTES')
    }
    environment {
        scannerHome = tool 'SonarQube'
    }
    stages {
        stage('Checkout repository') {
            steps {
                echo "Entering 'Checkout repository' stage"
                checkout scm
                echo "Completed 'Checkout repository' stage"
            }
        }

        stage('Check Current Directory') {
            steps {
                sh "ls -la"
            }
        }
        stage('SonarQube Analysis') {
            steps {
                // Define SonarQube Scanner
                    def sonarScannerHome = tool 'SonarQube';
                    env.PATH = "${sonarScannerHome}/bin:${env.PATH}"

                    // Execute SonarQube analysis
                    withSonarQubeEnv('SonarQube') {
                        sh """
                        sonar-scanner \
                        -Dsonar.projectKey=OWASP \
                        -Dsonar.sources=. \
                        -Dsonar.host.url=http://sonarqube:9000 \
                        -Dsonar.login=sqp_f6537c6972e2a3359994fa842ef85976a1817521
                        """
            }
        }     
    } 
}

